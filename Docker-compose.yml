services:
  mongo_db:
    image: mongo:7.0
    container_name: healthcare_migration-mongo_db
    networks:
      - my_netwrok
    ports:
      - "27017:27017"
    env_file:
      - .env  # assure-toi que ce fichier existe et contient toutes les variables
    environment:
      # Variables root
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      # Database par défaut (pour le root)
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      # Variables pour ton script init
      DB_NAME: ${MONGO_DATABASE}
      READER_USER: ${READER_USER}
      READER_PASS: ${READER_PASS}
      MANAGER_USER: ${MANAGER_USER}
      MANAGER_PASS: ${MANAGER_PASS}
    volumes:
      - mongo_data:/data/db       # volume persistant
      - ./init-scripts:/docker-entrypoint-initdb.d  # scripts init
    healthcheck:
    test: ["CMD", "mongo", "--username", "${MONGO_ROOT_USERNAME}", "--password", "${MONGO_ROOT_PASSWORD}", "--eval", "db.adminCommand('ping')"]
    interval: 2s
    timeout: 5s
    retries: 10
  migration:
    build: .
    container_name: healthcare_migration-migration
    depends_on:
      mongo_db:
       condition: service_healthy
    networks:
      - my_netwrok
    environment:
      MONGO_DB: ${MONGO_DATABASE}
      MONGO_COLLECTION: patients
      CSV_PATH: data/healthcare_dataset.csv
      MONGO_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - .:/app
    command: ["bash", "./.init/entrypoint.sh", "all"]  # par défaut: migration + tests
networks:
  my_netwrok:
    name: healthcare_migration_network
volumes:
  mongo_data:
